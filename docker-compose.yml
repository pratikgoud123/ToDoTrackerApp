version: '3.9'
services:
  tracker-service:
    image: tracker_image
    container_name: tracker-service
    build: UserTask/
    restart: always
    networks:
      - mynetwork
    ports:
      - 8083:8083
    depends_on:
      - mongoService
      - rabbitmq-service
      - cloudapi-service


  mongoService:
    image: mongo:latest
    container_name: mongoService
    ports:
      - 27017:27017
    networks:
      - mynetwork

  authentication-service:
    image: authentication_image
    container_name: authentication-service
    build: UserAuthentication/
    restart: always
    networks:
      - mynetwork
    ports:
      - 8086:8086
    depends_on:
      - mysqlService
      - cloudapi-service


  mysqlService:
    image: mysql:latest
    container_name: mysqlService
    networks:
      - mynetwork
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"


  cloudapi-service:
    image: cloudapi_image
    container_name: cloudapi-service
    build: SpringCloudApiGateway/
    restart: always
    networks:
      - mynetwork
    ports:
      - 9000:9000
    environment:
      API_GATEWAY_PORT: 9000

  rabbitmq-service:
    image: rabbitmq:management
    container_name: rabbitmq-service
    restart: always
    networks:
      - mynetwork
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  notification-service:
    image: notification_image
    container_name: notification-service
    build: NotificationService/
    restart: always
    networks:
      - mynetwork
    ports:
      - 8082:8082
    depends_on:
      - mongoService
      - rabbitmq-service
      - cloudapi-service

  eureka-service:
    image: eureka_image
    container_name: eureka-service
    build: EurekaServer/
    restart: always
    networks:
      - mynetwork
    ports:
      - 8761:8761

#  mongoService1:
#    image: mongoNotification
#    container_name: mongocontainer
#    ports:
#      - 27017:27017
#    networks:
#      - mynetwork

networks:
  mynetwork:
    driver: bridge